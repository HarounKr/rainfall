#include <cstring>
#include <cstdlib>

class N {
public:
    void* vtable;
    char annotation[100];
    // Valeur stockée à un déplacement spécifique, ici à l'offset 0x68 comme observé dans l'assembleur
    int value;

    // Constructeur qui initialise la table virtuelle et la valeur
    N(int param_1) {
        vtable = nullptr;  // Cela représenterait normalement le début d'une table de fonctions virtuelles
        value = param_1;
    }

    // Définition de la méthode setAnnotation avec traitement de chaîne
    void setAnnotation(char* param_1) {
        size_t n = strlen(param_1);
        memcpy(annotation, param_1, n);
    }

    // Surcharge de l'opérateur +
    int operator+(const N& other) {
        return this->value + other.value;
    }

    // Surcharge de l'opérateur -
    int operator-(const N& other) {
        return this->value - other.value;
    }
};

int main(int argc, char** argv) {
    if (argc < 2) {
        std::exit(1);  // Quitte si le nombre d'arguments est insuffisant
    }

    N* obj1 = new N(5);
    N* obj2 = new N(6)

    obj1->setAnnotation(argv[1]);

    return 0;
}

